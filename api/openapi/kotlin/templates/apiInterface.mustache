/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) ({{{generatorVersion}}}).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package {{package}}

{{#imports}}import {{import}}
{{/imports}}
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
{{#useBeanValidation}}
import org.springframework.validation.annotation.Validated
{{/useBeanValidation}}
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

{{#useBeanValidation}}
import {{javaxPackage}}.validation.constraints.DecimalMax
import {{javaxPackage}}.validation.constraints.DecimalMin
import {{javaxPackage}}.validation.constraints.Email
import {{javaxPackage}}.validation.constraints.Max
import {{javaxPackage}}.validation.constraints.Min
import {{javaxPackage}}.validation.constraints.NotNull
import {{javaxPackage}}.validation.constraints.Pattern
import {{javaxPackage}}.validation.constraints.Size
import {{javaxPackage}}.validation.Valid
{{/useBeanValidation}}

{{#reactive}}
import reactor.core.publisher.Flux
import reactor.core.publisher.Mono
{{/reactive}}

import kotlin.collections.List
import kotlin.collections.Map

{{^useFeignClient}}
@RestController
{{/useFeignClient}}
{{#useBeanValidation}}
@Validated
{{/useBeanValidation}}
{{#operations}}
interface {{classname}} {
{{#operation}}

    /**
     * {{#summary}}{{{.}}}{{/summary}}
     *
     * {{#notes}}{{{.}}} {{/notes}}(operationId: {{operationId}})
     *
    {{#allParams}}
     * @param {{paramName}}: {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}
    {{/allParams}}
     * @return {{#responses}}{{message}} (status code {{code}}){{^-last}}
     *         or {{/-last}}{{/responses}}
     */
    @RequestMapping(
            method = [RequestMethod.{{httpMethod}}],
            value = ["{{#lambdaEscapeInNormalString}}{{{path}}}{{/lambdaEscapeInNormalString}}"]{{#singleContentTypes}}{{#hasProduces}},
            produces = [{{#vendorExtensions.x-accepts}}"{{{.}}}"{{^-last}}, {{/-last}}{{/vendorExtensions.x-accepts}}]{{/hasProduces}}{{#hasConsumes}},
            consumes = "{{{vendorExtensions.x-content-type}}}"{{/hasConsumes}}{{/singleContentTypes}}{{^singleContentTypes}}{{#hasProduces}},
            produces = [{{#produces}}"{{{mediaType}}}"{{^-last}}, {{/-last}}{{/produces}}]{{/hasProduces}}{{#hasConsumes}},
            consumes = [{{#consumes}}"{{{mediaType}}}"{{^-last}}, {{/-last}}{{/consumes}}]{{/hasConsumes}}{{/singleContentTypes}}
    )
    fun {{operationId}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>cookieParams}}{{>bodyParams}}{{>formParams}}{{^-last}},{{/-last}}{{/allParams}}): {{#reactive}}{{^vendorExtensions.x-kotlin-reactor-flux}}Mono{{/vendorExtensions.x-kotlin-reactor-flux}}{{#vendorExtensions.x-kotlin-reactor-flux}}Flux{{/vendorExtensions.x-kotlin-reactor-flux}}{{/reactive}}{{^reactive}}ResponseEntity{{/reactive}}<{{>returnTypes}}>
{{/operation}}
}
{{/operations}}
