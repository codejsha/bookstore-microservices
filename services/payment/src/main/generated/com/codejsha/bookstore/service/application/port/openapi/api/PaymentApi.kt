/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.12.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package com.codejsha.bookstore.service.application.port.openapi.api

import com.codejsha.bookstore.service.application.port.openapi.model.PaymentFindAllWebResp
import com.codejsha.bookstore.service.application.port.openapi.model.PaymentFindWebResp
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import jakarta.validation.constraints.DecimalMax
import jakarta.validation.constraints.DecimalMin
import jakarta.validation.constraints.Email
import jakarta.validation.constraints.Max
import jakarta.validation.constraints.Min
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Pattern
import jakarta.validation.constraints.Size
import jakarta.validation.Valid


import kotlin.collections.List
import kotlin.collections.Map

@RestController
@Validated
interface PaymentApi {

    /**
     * Find all payments
     *
     * Find all payments (operationId: apiV1PaymentsGet)
     *
     * @param sort: Field to sort by (optional, default to "created_at")
     * @param order: Sorting order (optional, default to desc)
     * @param limit: Number of items to return (optional, default to 10)
     * @param offset: The number of items to skip (optional, default to 0)
     * @return Successful operation (status code 200)
     */
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/api/v1/payments"],
            produces = ["application/json"]
    )
    fun apiV1PaymentsGet( @Valid @RequestParam(value = "sort", required = false, defaultValue = "created_at") sort: kotlin.String, @Valid @RequestParam(value = "order", required = false, defaultValue = "desc") order: kotlin.String,@Min(1) @Valid @RequestParam(value = "limit", required = false, defaultValue = "10") limit: kotlin.Int,@Min(0) @Valid @RequestParam(value = "offset", required = false, defaultValue = "0") offset: kotlin.Int): ResponseEntity<PaymentFindAllWebResp>

    /**
     * Find payment
     *
     * Find payment (operationId: apiV1PaymentsIdGet)
     *
     * @param id: Payment ID (required)
     * @return Successful operation (status code 200)
     */
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/api/v1/payments/{id}"],
            produces = ["application/json"]
    )
    fun apiV1PaymentsIdGet( @PathVariable("id") id: kotlin.Long): ResponseEntity<PaymentFindWebResp>
}
