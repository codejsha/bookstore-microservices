// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak Admin REST API
//
// This is a REST API reference for the Keycloak Admin REST API.
//
// API version: 1.0

package idp

import (
	"context"
)

type AuthenticationManagementAPI interface {

	// Get authenticator providers Returns a stream of authenticator providers.
	// (operationId: AdminRealmsRealmAuthenticationAuthenticatorProvidersGet)
	// GET /admin/realms/{realm}/authentication/authenticator-providers
	AdminRealmsRealmAuthenticationAuthenticatorProvidersGet(ctx context.Context, param AdminRealmsRealmAuthenticationAuthenticatorProvidersGetParam) ([]map[string]interface{}, error)

	// Get client authenticator providers Returns a stream of client authenticator providers.
	// (operationId: AdminRealmsRealmAuthenticationClientAuthenticatorProvidersGet)
	// GET /admin/realms/{realm}/authentication/client-authenticator-providers
	AdminRealmsRealmAuthenticationClientAuthenticatorProvidersGet(ctx context.Context, param AdminRealmsRealmAuthenticationClientAuthenticatorProvidersGetParam) ([]map[string]interface{}, error)

	// Get authenticator provider's configuration description
	// (operationId: AdminRealmsRealmAuthenticationConfigDescriptionProviderIdGet)
	// GET /admin/realms/{realm}/authentication/config-description/{providerId}
	AdminRealmsRealmAuthenticationConfigDescriptionProviderIdGet(ctx context.Context, param AdminRealmsRealmAuthenticationConfigDescriptionProviderIdGetParam) (AuthenticatorConfigInfoRepresentation, error)

	// Delete authenticator configuration
	// (operationId: AdminRealmsRealmAuthenticationConfigIdDelete)
	// DELETE /admin/realms/{realm}/authentication/config/{id}
	AdminRealmsRealmAuthenticationConfigIdDelete(ctx context.Context, param AdminRealmsRealmAuthenticationConfigIdDeleteParam) error

	// Get authenticator configuration
	// (operationId: AdminRealmsRealmAuthenticationConfigIdGet)
	// GET /admin/realms/{realm}/authentication/config/{id}
	AdminRealmsRealmAuthenticationConfigIdGet(ctx context.Context, param AdminRealmsRealmAuthenticationConfigIdGetParam) (AuthenticatorConfigRepresentation, error)

	// Update authenticator configuration
	// (operationId: AdminRealmsRealmAuthenticationConfigIdPut)
	// PUT /admin/realms/{realm}/authentication/config/{id}
	AdminRealmsRealmAuthenticationConfigIdPut(ctx context.Context, param AdminRealmsRealmAuthenticationConfigIdPutParam, req AuthenticatorConfigRepresentation) error

	// Create new authenticator configuration
	// (operationId: AdminRealmsRealmAuthenticationConfigPost)
	// POST /admin/realms/{realm}/authentication/config
	// Deprecated
	AdminRealmsRealmAuthenticationConfigPost(ctx context.Context, param AdminRealmsRealmAuthenticationConfigPostParam, req AuthenticatorConfigRepresentation) error

	// Get execution's configuration
	// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigIdGet)
	// GET /admin/realms/{realm}/authentication/executions/{executionId}/config/{id}
	// Deprecated
	AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigIdGet(ctx context.Context, param AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigIdGetParam) (AuthenticatorConfigRepresentation, error)

	// Update execution with new configuration
	// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigPost)
	// POST /admin/realms/{realm}/authentication/executions/{executionId}/config
	AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigPost(ctx context.Context, param AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigPostParam, req AuthenticatorConfigRepresentation) error

	// Delete execution
	// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdDelete)
	// DELETE /admin/realms/{realm}/authentication/executions/{executionId}
	AdminRealmsRealmAuthenticationExecutionsExecutionIdDelete(ctx context.Context, param AdminRealmsRealmAuthenticationExecutionsExecutionIdDeleteParam) error

	// Get Single Execution
	// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdGet)
	// GET /admin/realms/{realm}/authentication/executions/{executionId}
	AdminRealmsRealmAuthenticationExecutionsExecutionIdGet(ctx context.Context, param AdminRealmsRealmAuthenticationExecutionsExecutionIdGetParam) (AuthenticationExecutionRepresentation, error)

	// Lower execution's priority
	// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdLowerPriorityPost)
	// POST /admin/realms/{realm}/authentication/executions/{executionId}/lower-priority
	AdminRealmsRealmAuthenticationExecutionsExecutionIdLowerPriorityPost(ctx context.Context, param AdminRealmsRealmAuthenticationExecutionsExecutionIdLowerPriorityPostParam) error

	// Raise execution's priority
	// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdRaisePriorityPost)
	// POST /admin/realms/{realm}/authentication/executions/{executionId}/raise-priority
	AdminRealmsRealmAuthenticationExecutionsExecutionIdRaisePriorityPost(ctx context.Context, param AdminRealmsRealmAuthenticationExecutionsExecutionIdRaisePriorityPostParam) error

	// Add new authentication execution
	// (operationId: AdminRealmsRealmAuthenticationExecutionsPost)
	// POST /admin/realms/{realm}/authentication/executions
	AdminRealmsRealmAuthenticationExecutionsPost(ctx context.Context, param AdminRealmsRealmAuthenticationExecutionsPostParam, req AuthenticationExecutionRepresentation) error

	// Copy existing authentication flow under a new name The new name is given as 'newName' attribute of the passed JSON object
	// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasCopyPost)
	// POST /admin/realms/{realm}/authentication/flows/{flowAlias}/copy
	AdminRealmsRealmAuthenticationFlowsFlowAliasCopyPost(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsFlowAliasCopyPostParam, req AdminRealmsRealmAuthenticationFlowsFlowAliasCopyPostReq) error

	// Add new authentication execution to a flow
	// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsExecutionPost)
	// POST /admin/realms/{realm}/authentication/flows/{flowAlias}/executions/execution
	AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsExecutionPost(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsExecutionPostParam, req AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsExecutionPostReq) error

	// Add new flow with new execution to existing flow
	// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsFlowPost)
	// POST /admin/realms/{realm}/authentication/flows/{flowAlias}/executions/flow
	AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsFlowPost(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsFlowPostParam, req AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsFlowPostReq) error

	// Get authentication executions for a flow
	// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsGet)
	// GET /admin/realms/{realm}/authentication/flows/{flowAlias}/executions
	AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsGet(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsGetParam) ([]AuthenticationExecutionInfoRepresentation, error)

	// Update authentication executions of a Flow
	// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsPut)
	// PUT /admin/realms/{realm}/authentication/flows/{flowAlias}/executions
	AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsPut(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsPutParam, req AuthenticationExecutionInfoRepresentation) error

	// Get authentication flows Returns a stream of authentication flows.
	// (operationId: AdminRealmsRealmAuthenticationFlowsGet)
	// GET /admin/realms/{realm}/authentication/flows
	AdminRealmsRealmAuthenticationFlowsGet(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsGetParam) ([]AuthenticationFlowRepresentation, error)

	// Delete an authentication flow
	// (operationId: AdminRealmsRealmAuthenticationFlowsIdDelete)
	// DELETE /admin/realms/{realm}/authentication/flows/{id}
	AdminRealmsRealmAuthenticationFlowsIdDelete(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsIdDeleteParam) error

	// Get authentication flow for id
	// (operationId: AdminRealmsRealmAuthenticationFlowsIdGet)
	// GET /admin/realms/{realm}/authentication/flows/{id}
	AdminRealmsRealmAuthenticationFlowsIdGet(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsIdGetParam) (AuthenticationFlowRepresentation, error)

	// Update an authentication flow
	// (operationId: AdminRealmsRealmAuthenticationFlowsIdPut)
	// PUT /admin/realms/{realm}/authentication/flows/{id}
	AdminRealmsRealmAuthenticationFlowsIdPut(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsIdPutParam, req AuthenticationFlowRepresentation) error

	// Create a new authentication flow
	// (operationId: AdminRealmsRealmAuthenticationFlowsPost)
	// POST /admin/realms/{realm}/authentication/flows
	AdminRealmsRealmAuthenticationFlowsPost(ctx context.Context, param AdminRealmsRealmAuthenticationFlowsPostParam, req AuthenticationFlowRepresentation) error

	// Get form action providers Returns a stream of form action providers.
	// (operationId: AdminRealmsRealmAuthenticationFormActionProvidersGet)
	// GET /admin/realms/{realm}/authentication/form-action-providers
	AdminRealmsRealmAuthenticationFormActionProvidersGet(ctx context.Context, param AdminRealmsRealmAuthenticationFormActionProvidersGetParam) ([]map[string]interface{}, error)

	// Get form providers Returns a stream of form providers.
	// (operationId: AdminRealmsRealmAuthenticationFormProvidersGet)
	// GET /admin/realms/{realm}/authentication/form-providers
	AdminRealmsRealmAuthenticationFormProvidersGet(ctx context.Context, param AdminRealmsRealmAuthenticationFormProvidersGetParam) ([]map[string]interface{}, error)

	// Get configuration descriptions for all clients
	// (operationId: AdminRealmsRealmAuthenticationPerClientConfigDescriptionGet)
	// GET /admin/realms/{realm}/authentication/per-client-config-description
	AdminRealmsRealmAuthenticationPerClientConfigDescriptionGet(ctx context.Context, param AdminRealmsRealmAuthenticationPerClientConfigDescriptionGetParam) (map[string][]ConfigPropertyRepresentation, error)

	// Register a new required actions
	// (operationId: AdminRealmsRealmAuthenticationRegisterRequiredActionPost)
	// POST /admin/realms/{realm}/authentication/register-required-action
	AdminRealmsRealmAuthenticationRegisterRequiredActionPost(ctx context.Context, param AdminRealmsRealmAuthenticationRegisterRequiredActionPostParam, req AdminRealmsRealmAuthenticationRegisterRequiredActionPostReq) error

	// Delete RequiredAction configuration
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDelete)
	// DELETE /admin/realms/{realm}/authentication/required-actions/{alias}/config
	AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDelete(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDeleteParam) error

	// Get RequiredAction provider configuration description
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDescriptionGet)
	// GET /admin/realms/{realm}/authentication/required-actions/{alias}/config-description
	AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDescriptionGet(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDescriptionGetParam) (RequiredActionConfigInfoRepresentation, error)

	// Get RequiredAction configuration
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasConfigGet)
	// GET /admin/realms/{realm}/authentication/required-actions/{alias}/config
	AdminRealmsRealmAuthenticationRequiredActionsAliasConfigGet(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasConfigGetParam) (RequiredActionConfigRepresentation, error)

	// Update RequiredAction configuration
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasConfigPut)
	// PUT /admin/realms/{realm}/authentication/required-actions/{alias}/config
	AdminRealmsRealmAuthenticationRequiredActionsAliasConfigPut(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasConfigPutParam, req RequiredActionConfigRepresentation) error

	// Delete required action
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasDelete)
	// DELETE /admin/realms/{realm}/authentication/required-actions/{alias}
	AdminRealmsRealmAuthenticationRequiredActionsAliasDelete(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasDeleteParam) error

	// Get required action for alias
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasGet)
	// GET /admin/realms/{realm}/authentication/required-actions/{alias}
	AdminRealmsRealmAuthenticationRequiredActionsAliasGet(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasGetParam) (RequiredActionProviderRepresentation, error)

	// Lower required action's priority
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasLowerPriorityPost)
	// POST /admin/realms/{realm}/authentication/required-actions/{alias}/lower-priority
	AdminRealmsRealmAuthenticationRequiredActionsAliasLowerPriorityPost(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasLowerPriorityPostParam) error

	// Update required action
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasPut)
	// PUT /admin/realms/{realm}/authentication/required-actions/{alias}
	AdminRealmsRealmAuthenticationRequiredActionsAliasPut(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasPutParam, req RequiredActionProviderRepresentation) error

	// Raise required action's priority
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasRaisePriorityPost)
	// POST /admin/realms/{realm}/authentication/required-actions/{alias}/raise-priority
	AdminRealmsRealmAuthenticationRequiredActionsAliasRaisePriorityPost(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsAliasRaisePriorityPostParam) error

	// Get required actions Returns a stream of required actions.
	// (operationId: AdminRealmsRealmAuthenticationRequiredActionsGet)
	// GET /admin/realms/{realm}/authentication/required-actions
	AdminRealmsRealmAuthenticationRequiredActionsGet(ctx context.Context, param AdminRealmsRealmAuthenticationRequiredActionsGetParam) ([]RequiredActionProviderRepresentation, error)

	// Get unregistered required actions Returns a stream of unregistered required actions.
	// (operationId: AdminRealmsRealmAuthenticationUnregisteredRequiredActionsGet)
	// GET /admin/realms/{realm}/authentication/unregistered-required-actions
	AdminRealmsRealmAuthenticationUnregisteredRequiredActionsGet(ctx context.Context, param AdminRealmsRealmAuthenticationUnregisteredRequiredActionsGetParam) ([]map[string]string, error)
}
