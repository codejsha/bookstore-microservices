// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak Admin REST API
//
// This is a REST API reference for the Keycloak Admin REST API.
//
// API version: 1.0

package idp

// Returns the groups counts.
// (operationId: AdminRealmsRealmGroupsCountGet)
type AdminRealmsRealmGroupsCountGetParam struct {
	// realm name (not id!)
	Realm  string `uri:"realm"`
	Search string `form:"search,omitempty"`
	Top    bool   `form:"top,omitempty"`
}

// Get group hierarchy.  Only `name` and `id` are returned.  `subGroups` are only returned when using the `search` or `q` parameter. If none of these parameters is provided, the top-level groups are returned without `subGroups` being filled.
// (operationId: AdminRealmsRealmGroupsGet)
type AdminRealmsRealmGroupsGetParam struct {
	// realm name (not id!)
	Realm               string `uri:"realm"`
	BriefRepresentation bool   `form:"briefRepresentation,omitempty"`
	Exact               bool   `form:"exact,omitempty"`
	First               int32  `form:"first,omitempty"`
	Max                 int32  `form:"max,omitempty"`
	PopulateHierarchy   bool   `form:"populateHierarchy,omitempty"`
	Q                   string `form:"q,omitempty"`
	Search              string `form:"search,omitempty"`
}

// Return a paginated list of subgroups that have a parent group corresponding to the group on the URL
// (operationId: AdminRealmsRealmGroupsGroupIdChildrenGet)
type AdminRealmsRealmGroupsGroupIdChildrenGetParam struct {
	// realm name (not id!)
	Realm   string `uri:"realm"`
	GroupId string `uri:"group-id"`
	// Boolean which defines whether brief groups representations are returned or not (default: false)
	BriefRepresentation bool `form:"briefRepresentation,omitempty"`
	// Boolean which defines whether the params \"search\" must match exactly or not
	Exact bool `form:"exact,omitempty"`
	// The position of the first result to be returned (pagination offset).
	First int32 `form:"first,omitempty"`
	// The maximum number of results that are to be returned. Defaults to 10
	Max int32 `form:"max,omitempty"`
	// A String representing either an exact group name or a partial name
	Search string `form:"search,omitempty"`
}

// Set or create child.
// This will just set the parent if it exists. Create it and set the parent if the group doesn’t exist. (operationId: AdminRealmsRealmGroupsGroupIdChildrenPost)
type AdminRealmsRealmGroupsGroupIdChildrenPostParam struct {
	// realm name (not id!)
	Realm   string `uri:"realm"`
	GroupId string `uri:"group-id"`
}

// (operationId: AdminRealmsRealmGroupsGroupIdDelete)
type AdminRealmsRealmGroupsGroupIdDeleteParam struct {
	// realm name (not id!)
	Realm   string `uri:"realm"`
	GroupId string `uri:"group-id"`
}

// (operationId: AdminRealmsRealmGroupsGroupIdGet)
type AdminRealmsRealmGroupsGroupIdGetParam struct {
	// realm name (not id!)
	Realm   string `uri:"realm"`
	GroupId string `uri:"group-id"`
}

// Return object stating whether client Authorization permissions have been initialized or not and a reference
// (operationId: AdminRealmsRealmGroupsGroupIdManagementPermissionsGet)
type AdminRealmsRealmGroupsGroupIdManagementPermissionsGetParam struct {
	// realm name (not id!)
	Realm   string `uri:"realm"`
	GroupId string `uri:"group-id"`
}

// Return object stating whether client Authorization permissions have been initialized or not and a reference
// (operationId: AdminRealmsRealmGroupsGroupIdManagementPermissionsPut)
type AdminRealmsRealmGroupsGroupIdManagementPermissionsPutParam struct {
	// realm name (not id!)
	Realm   string `uri:"realm"`
	GroupId string `uri:"group-id"`
}

// Get users Returns a stream of users, filtered according to query parameters
// (operationId: AdminRealmsRealmGroupsGroupIdMembersGet)
type AdminRealmsRealmGroupsGroupIdMembersGetParam struct {
	// realm name (not id!)
	Realm   string `uri:"realm"`
	GroupId string `uri:"group-id"`
	// Only return basic information (only guaranteed to return id, username, created, first and last name, email, enabled state, email verification state, federation link, and access. Note that it means that namely user attributes, required actions, and not before are not returned.)
	BriefRepresentation bool `form:"briefRepresentation,omitempty"`
	// Pagination offset
	First int32 `form:"first,omitempty"`
	// Maximum results size (defaults to 100)
	Max int32 `form:"max,omitempty"`
}

// Update group, ignores subgroups.
// (operationId: AdminRealmsRealmGroupsGroupIdPut)
type AdminRealmsRealmGroupsGroupIdPutParam struct {
	// realm name (not id!)
	Realm   string `uri:"realm"`
	GroupId string `uri:"group-id"`
}

// create or add a top level realm groupSet or create child.
// This will update the group and set the parent if it exists. Create it and set the parent if the group doesn’t exist. (operationId: AdminRealmsRealmGroupsPost)
type AdminRealmsRealmGroupsPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}
