// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak OpenID Connect API
//
// Keycloak OpenID Connect API of Bookstore microservices
//
// API version: 0.1.0
// Contact: admin@example.com

package idp

import (
	"encoding/json"
)

// checks if the TokenIntrospectWebResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenIntrospectWebResp{}

// TokenIntrospectWebResp struct for TokenIntrospectWebResp
type TokenIntrospectWebResp struct {
	Exp               *int32                                `json:"exp,omitempty"`
	Iat               *int32                                `json:"iat,omitempty"`
	Jti               *string                               `json:"jti,omitempty"`
	Iss               *string                               `json:"iss,omitempty"`
	Aud               []string                              `json:"aud,omitempty"`
	Sub               *string                               `json:"sub,omitempty"`
	Typ               *string                               `json:"typ,omitempty"`
	Azp               *string                               `json:"azp,omitempty"`
	Sid               *string                               `json:"sid,omitempty"`
	Acr               *string                               `json:"acr,omitempty"`
	AllowedOrigins    []string                              `json:"allowed-origins,omitempty"`
	RealmAccess       *TokenIntrospectWebRespRealmAccess    `json:"realm_access,omitempty"`
	ResourceAccess    *TokenIntrospectWebRespResourceAccess `json:"resource_access,omitempty"`
	Scope             *string                               `json:"scope,omitempty"`
	EmailVerified     *bool                                 `json:"email_verified,omitempty"`
	Name              *string                               `json:"name,omitempty"`
	PreferredUsername *string                               `json:"preferred_username,omitempty"`
	GivenName         *string                               `json:"given_name,omitempty"`
	FamilyName        *string                               `json:"family_name,omitempty"`
	Email             *string                               `json:"email,omitempty"`
	ClientId          *string                               `json:"client_id,omitempty"`
	Username          *string                               `json:"username,omitempty"`
	TokenType         *string                               `json:"token_type,omitempty"`
	Active            *bool                                 `json:"active,omitempty"`
}

// NewTokenIntrospectWebResp instantiates a new TokenIntrospectWebResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenIntrospectWebResp() *TokenIntrospectWebResp {
	this := TokenIntrospectWebResp{}
	return &this
}

// NewTokenIntrospectWebRespWithDefaults instantiates a new TokenIntrospectWebResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenIntrospectWebRespWithDefaults() *TokenIntrospectWebResp {
	this := TokenIntrospectWebResp{}
	return &this
}

// GetExp returns the Exp field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetExp() int32 {
	if o == nil || IsNil(o.Exp) {
		var ret int32
		return ret
	}
	return *o.Exp
}

// GetExpOk returns a tuple with the Exp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetExpOk() (*int32, bool) {
	if o == nil || IsNil(o.Exp) {
		return nil, false
	}
	return o.Exp, true
}

// HasExp returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasExp() bool {
	if o != nil && !IsNil(o.Exp) {
		return true
	}

	return false
}

// SetExp gets a reference to the given int32 and assigns it to the Exp field.
func (o *TokenIntrospectWebResp) SetExp(v int32) {
	o.Exp = &v
}

// GetIat returns the Iat field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetIat() int32 {
	if o == nil || IsNil(o.Iat) {
		var ret int32
		return ret
	}
	return *o.Iat
}

// GetIatOk returns a tuple with the Iat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetIatOk() (*int32, bool) {
	if o == nil || IsNil(o.Iat) {
		return nil, false
	}
	return o.Iat, true
}

// HasIat returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasIat() bool {
	if o != nil && !IsNil(o.Iat) {
		return true
	}

	return false
}

// SetIat gets a reference to the given int32 and assigns it to the Iat field.
func (o *TokenIntrospectWebResp) SetIat(v int32) {
	o.Iat = &v
}

// GetJti returns the Jti field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetJti() string {
	if o == nil || IsNil(o.Jti) {
		var ret string
		return ret
	}
	return *o.Jti
}

// GetJtiOk returns a tuple with the Jti field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetJtiOk() (*string, bool) {
	if o == nil || IsNil(o.Jti) {
		return nil, false
	}
	return o.Jti, true
}

// HasJti returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasJti() bool {
	if o != nil && !IsNil(o.Jti) {
		return true
	}

	return false
}

// SetJti gets a reference to the given string and assigns it to the Jti field.
func (o *TokenIntrospectWebResp) SetJti(v string) {
	o.Jti = &v
}

// GetIss returns the Iss field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetIss() string {
	if o == nil || IsNil(o.Iss) {
		var ret string
		return ret
	}
	return *o.Iss
}

// GetIssOk returns a tuple with the Iss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetIssOk() (*string, bool) {
	if o == nil || IsNil(o.Iss) {
		return nil, false
	}
	return o.Iss, true
}

// HasIss returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasIss() bool {
	if o != nil && !IsNil(o.Iss) {
		return true
	}

	return false
}

// SetIss gets a reference to the given string and assigns it to the Iss field.
func (o *TokenIntrospectWebResp) SetIss(v string) {
	o.Iss = &v
}

// GetAud returns the Aud field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetAud() []string {
	if o == nil || IsNil(o.Aud) {
		var ret []string
		return ret
	}
	return o.Aud
}

// GetAudOk returns a tuple with the Aud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetAudOk() ([]string, bool) {
	if o == nil || IsNil(o.Aud) {
		return nil, false
	}
	return o.Aud, true
}

// HasAud returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasAud() bool {
	if o != nil && !IsNil(o.Aud) {
		return true
	}

	return false
}

// SetAud gets a reference to the given []string and assigns it to the Aud field.
func (o *TokenIntrospectWebResp) SetAud(v []string) {
	o.Aud = v
}

// GetSub returns the Sub field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetSub() string {
	if o == nil || IsNil(o.Sub) {
		var ret string
		return ret
	}
	return *o.Sub
}

// GetSubOk returns a tuple with the Sub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetSubOk() (*string, bool) {
	if o == nil || IsNil(o.Sub) {
		return nil, false
	}
	return o.Sub, true
}

// HasSub returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasSub() bool {
	if o != nil && !IsNil(o.Sub) {
		return true
	}

	return false
}

// SetSub gets a reference to the given string and assigns it to the Sub field.
func (o *TokenIntrospectWebResp) SetSub(v string) {
	o.Sub = &v
}

// GetTyp returns the Typ field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetTyp() string {
	if o == nil || IsNil(o.Typ) {
		var ret string
		return ret
	}
	return *o.Typ
}

// GetTypOk returns a tuple with the Typ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetTypOk() (*string, bool) {
	if o == nil || IsNil(o.Typ) {
		return nil, false
	}
	return o.Typ, true
}

// HasTyp returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasTyp() bool {
	if o != nil && !IsNil(o.Typ) {
		return true
	}

	return false
}

// SetTyp gets a reference to the given string and assigns it to the Typ field.
func (o *TokenIntrospectWebResp) SetTyp(v string) {
	o.Typ = &v
}

// GetAzp returns the Azp field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetAzp() string {
	if o == nil || IsNil(o.Azp) {
		var ret string
		return ret
	}
	return *o.Azp
}

// GetAzpOk returns a tuple with the Azp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetAzpOk() (*string, bool) {
	if o == nil || IsNil(o.Azp) {
		return nil, false
	}
	return o.Azp, true
}

// HasAzp returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasAzp() bool {
	if o != nil && !IsNil(o.Azp) {
		return true
	}

	return false
}

// SetAzp gets a reference to the given string and assigns it to the Azp field.
func (o *TokenIntrospectWebResp) SetAzp(v string) {
	o.Azp = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *TokenIntrospectWebResp) SetSid(v string) {
	o.Sid = &v
}

// GetAcr returns the Acr field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetAcr() string {
	if o == nil || IsNil(o.Acr) {
		var ret string
		return ret
	}
	return *o.Acr
}

// GetAcrOk returns a tuple with the Acr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetAcrOk() (*string, bool) {
	if o == nil || IsNil(o.Acr) {
		return nil, false
	}
	return o.Acr, true
}

// HasAcr returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasAcr() bool {
	if o != nil && !IsNil(o.Acr) {
		return true
	}

	return false
}

// SetAcr gets a reference to the given string and assigns it to the Acr field.
func (o *TokenIntrospectWebResp) SetAcr(v string) {
	o.Acr = &v
}

// GetAllowedOrigins returns the AllowedOrigins field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetAllowedOrigins() []string {
	if o == nil || IsNil(o.AllowedOrigins) {
		var ret []string
		return ret
	}
	return o.AllowedOrigins
}

// GetAllowedOriginsOk returns a tuple with the AllowedOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetAllowedOriginsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedOrigins) {
		return nil, false
	}
	return o.AllowedOrigins, true
}

// HasAllowedOrigins returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasAllowedOrigins() bool {
	if o != nil && !IsNil(o.AllowedOrigins) {
		return true
	}

	return false
}

// SetAllowedOrigins gets a reference to the given []string and assigns it to the AllowedOrigins field.
func (o *TokenIntrospectWebResp) SetAllowedOrigins(v []string) {
	o.AllowedOrigins = v
}

// GetRealmAccess returns the RealmAccess field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetRealmAccess() TokenIntrospectWebRespRealmAccess {
	if o == nil || IsNil(o.RealmAccess) {
		var ret TokenIntrospectWebRespRealmAccess
		return ret
	}
	return *o.RealmAccess
}

// GetRealmAccessOk returns a tuple with the RealmAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetRealmAccessOk() (*TokenIntrospectWebRespRealmAccess, bool) {
	if o == nil || IsNil(o.RealmAccess) {
		return nil, false
	}
	return o.RealmAccess, true
}

// HasRealmAccess returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasRealmAccess() bool {
	if o != nil && !IsNil(o.RealmAccess) {
		return true
	}

	return false
}

// SetRealmAccess gets a reference to the given TokenIntrospectWebRespRealmAccess and assigns it to the RealmAccess field.
func (o *TokenIntrospectWebResp) SetRealmAccess(v TokenIntrospectWebRespRealmAccess) {
	o.RealmAccess = &v
}

// GetResourceAccess returns the ResourceAccess field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetResourceAccess() TokenIntrospectWebRespResourceAccess {
	if o == nil || IsNil(o.ResourceAccess) {
		var ret TokenIntrospectWebRespResourceAccess
		return ret
	}
	return *o.ResourceAccess
}

// GetResourceAccessOk returns a tuple with the ResourceAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetResourceAccessOk() (*TokenIntrospectWebRespResourceAccess, bool) {
	if o == nil || IsNil(o.ResourceAccess) {
		return nil, false
	}
	return o.ResourceAccess, true
}

// HasResourceAccess returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasResourceAccess() bool {
	if o != nil && !IsNil(o.ResourceAccess) {
		return true
	}

	return false
}

// SetResourceAccess gets a reference to the given TokenIntrospectWebRespResourceAccess and assigns it to the ResourceAccess field.
func (o *TokenIntrospectWebResp) SetResourceAccess(v TokenIntrospectWebRespResourceAccess) {
	o.ResourceAccess = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *TokenIntrospectWebResp) SetScope(v string) {
	o.Scope = &v
}

// GetEmailVerified returns the EmailVerified field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetEmailVerified() bool {
	if o == nil || IsNil(o.EmailVerified) {
		var ret bool
		return ret
	}
	return *o.EmailVerified
}

// GetEmailVerifiedOk returns a tuple with the EmailVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetEmailVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailVerified) {
		return nil, false
	}
	return o.EmailVerified, true
}

// HasEmailVerified returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasEmailVerified() bool {
	if o != nil && !IsNil(o.EmailVerified) {
		return true
	}

	return false
}

// SetEmailVerified gets a reference to the given bool and assigns it to the EmailVerified field.
func (o *TokenIntrospectWebResp) SetEmailVerified(v bool) {
	o.EmailVerified = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TokenIntrospectWebResp) SetName(v string) {
	o.Name = &v
}

// GetPreferredUsername returns the PreferredUsername field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetPreferredUsername() string {
	if o == nil || IsNil(o.PreferredUsername) {
		var ret string
		return ret
	}
	return *o.PreferredUsername
}

// GetPreferredUsernameOk returns a tuple with the PreferredUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetPreferredUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredUsername) {
		return nil, false
	}
	return o.PreferredUsername, true
}

// HasPreferredUsername returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasPreferredUsername() bool {
	if o != nil && !IsNil(o.PreferredUsername) {
		return true
	}

	return false
}

// SetPreferredUsername gets a reference to the given string and assigns it to the PreferredUsername field.
func (o *TokenIntrospectWebResp) SetPreferredUsername(v string) {
	o.PreferredUsername = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *TokenIntrospectWebResp) SetGivenName(v string) {
	o.GivenName = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *TokenIntrospectWebResp) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *TokenIntrospectWebResp) SetEmail(v string) {
	o.Email = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *TokenIntrospectWebResp) SetClientId(v string) {
	o.ClientId = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *TokenIntrospectWebResp) SetUsername(v string) {
	o.Username = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetTokenType() string {
	if o == nil || IsNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TokenType) {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasTokenType() bool {
	if o != nil && !IsNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *TokenIntrospectWebResp) SetTokenType(v string) {
	o.TokenType = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *TokenIntrospectWebResp) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebResp) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *TokenIntrospectWebResp) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *TokenIntrospectWebResp) SetActive(v bool) {
	o.Active = &v
}

func (o TokenIntrospectWebResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenIntrospectWebResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Exp) {
		toSerialize["exp"] = o.Exp
	}
	if !IsNil(o.Iat) {
		toSerialize["iat"] = o.Iat
	}
	if !IsNil(o.Jti) {
		toSerialize["jti"] = o.Jti
	}
	if !IsNil(o.Iss) {
		toSerialize["iss"] = o.Iss
	}
	if !IsNil(o.Aud) {
		toSerialize["aud"] = o.Aud
	}
	if !IsNil(o.Sub) {
		toSerialize["sub"] = o.Sub
	}
	if !IsNil(o.Typ) {
		toSerialize["typ"] = o.Typ
	}
	if !IsNil(o.Azp) {
		toSerialize["azp"] = o.Azp
	}
	if !IsNil(o.Sid) {
		toSerialize["sid"] = o.Sid
	}
	if !IsNil(o.Acr) {
		toSerialize["acr"] = o.Acr
	}
	if !IsNil(o.AllowedOrigins) {
		toSerialize["allowed-origins"] = o.AllowedOrigins
	}
	if !IsNil(o.RealmAccess) {
		toSerialize["realm_access"] = o.RealmAccess
	}
	if !IsNil(o.ResourceAccess) {
		toSerialize["resource_access"] = o.ResourceAccess
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.EmailVerified) {
		toSerialize["email_verified"] = o.EmailVerified
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PreferredUsername) {
		toSerialize["preferred_username"] = o.PreferredUsername
	}
	if !IsNil(o.GivenName) {
		toSerialize["given_name"] = o.GivenName
	}
	if !IsNil(o.FamilyName) {
		toSerialize["family_name"] = o.FamilyName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.TokenType) {
		toSerialize["token_type"] = o.TokenType
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	return toSerialize, nil
}

type NullableTokenIntrospectWebResp struct {
	value *TokenIntrospectWebResp
	isSet bool
}

func (v NullableTokenIntrospectWebResp) Get() *TokenIntrospectWebResp {
	return v.value
}

func (v *NullableTokenIntrospectWebResp) Set(val *TokenIntrospectWebResp) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenIntrospectWebResp) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenIntrospectWebResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenIntrospectWebResp(val *TokenIntrospectWebResp) *NullableTokenIntrospectWebResp {
	return &NullableTokenIntrospectWebResp{value: val, isSet: true}
}

func (v NullableTokenIntrospectWebResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenIntrospectWebResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
