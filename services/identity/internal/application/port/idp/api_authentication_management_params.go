// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak Admin REST API
//
// This is a REST API reference for the Keycloak Admin REST API.
//
// API version: 1.0

package idp

// Get authenticator providers Returns a stream of authenticator providers.
// (operationId: AdminRealmsRealmAuthenticationAuthenticatorProvidersGet)
type AdminRealmsRealmAuthenticationAuthenticatorProvidersGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Get client authenticator providers Returns a stream of client authenticator providers.
// (operationId: AdminRealmsRealmAuthenticationClientAuthenticatorProvidersGet)
type AdminRealmsRealmAuthenticationClientAuthenticatorProvidersGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Get authenticator provider's configuration description
// (operationId: AdminRealmsRealmAuthenticationConfigDescriptionProviderIdGet)
type AdminRealmsRealmAuthenticationConfigDescriptionProviderIdGetParam struct {
	// realm name (not id!)
	Realm      string `uri:"realm"`
	ProviderId string `uri:"providerId"`
}

// Delete authenticator configuration
// (operationId: AdminRealmsRealmAuthenticationConfigIdDelete)
type AdminRealmsRealmAuthenticationConfigIdDeleteParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Configuration id
	Id string `uri:"id"`
}

// Get authenticator configuration
// (operationId: AdminRealmsRealmAuthenticationConfigIdGet)
type AdminRealmsRealmAuthenticationConfigIdGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Configuration id
	Id string `uri:"id"`
}

// Update authenticator configuration
// (operationId: AdminRealmsRealmAuthenticationConfigIdPut)
type AdminRealmsRealmAuthenticationConfigIdPutParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Configuration id
	Id string `uri:"id"`
}

// Create new authenticator configuration
// (operationId: AdminRealmsRealmAuthenticationConfigPost)
type AdminRealmsRealmAuthenticationConfigPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Get execution's configuration
// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigIdGet)
type AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigIdGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Execution id
	ExecutionId string `uri:"executionId"`
	// Configuration id
	Id string `uri:"id"`
}

// Update execution with new configuration
// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigPost)
type AdminRealmsRealmAuthenticationExecutionsExecutionIdConfigPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Execution id
	ExecutionId string `uri:"executionId"`
}

// Delete execution
// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdDelete)
type AdminRealmsRealmAuthenticationExecutionsExecutionIdDeleteParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Execution id
	ExecutionId string `uri:"executionId"`
}

// Get Single Execution
// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdGet)
type AdminRealmsRealmAuthenticationExecutionsExecutionIdGetParam struct {
	// realm name (not id!)
	Realm       string `uri:"realm"`
	ExecutionId string `uri:"executionId"`
}

// Lower execution's priority
// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdLowerPriorityPost)
type AdminRealmsRealmAuthenticationExecutionsExecutionIdLowerPriorityPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Execution id
	ExecutionId string `uri:"executionId"`
}

// Raise execution's priority
// (operationId: AdminRealmsRealmAuthenticationExecutionsExecutionIdRaisePriorityPost)
type AdminRealmsRealmAuthenticationExecutionsExecutionIdRaisePriorityPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Execution id
	ExecutionId string `uri:"executionId"`
}

// Add new authentication execution
// (operationId: AdminRealmsRealmAuthenticationExecutionsPost)
type AdminRealmsRealmAuthenticationExecutionsPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Copy existing authentication flow under a new name The new name is given as 'newName' attribute of the passed JSON object
// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasCopyPost)
type AdminRealmsRealmAuthenticationFlowsFlowAliasCopyPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// name of the existing authentication flow
	FlowAlias string `uri:"flowAlias"`
}

// Add new authentication execution to a flow
// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsExecutionPost)
type AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsExecutionPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of parent flow
	FlowAlias string `uri:"flowAlias"`
}

// Add new flow with new execution to existing flow
// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsFlowPost)
type AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsFlowPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of parent authentication flow
	FlowAlias string `uri:"flowAlias"`
}

// Get authentication executions for a flow
// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsGet)
type AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Flow alias
	FlowAlias string `uri:"flowAlias"`
}

// Update authentication executions of a Flow
// (operationId: AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsPut)
type AdminRealmsRealmAuthenticationFlowsFlowAliasExecutionsPutParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Flow alias
	FlowAlias string `uri:"flowAlias"`
}

// Get authentication flows Returns a stream of authentication flows.
// (operationId: AdminRealmsRealmAuthenticationFlowsGet)
type AdminRealmsRealmAuthenticationFlowsGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Delete an authentication flow
// (operationId: AdminRealmsRealmAuthenticationFlowsIdDelete)
type AdminRealmsRealmAuthenticationFlowsIdDeleteParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Flow id
	Id string `uri:"id"`
}

// Get authentication flow for id
// (operationId: AdminRealmsRealmAuthenticationFlowsIdGet)
type AdminRealmsRealmAuthenticationFlowsIdGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Flow id
	Id string `uri:"id"`
}

// Update an authentication flow
// (operationId: AdminRealmsRealmAuthenticationFlowsIdPut)
type AdminRealmsRealmAuthenticationFlowsIdPutParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	Id    string `uri:"id"`
}

// Create a new authentication flow
// (operationId: AdminRealmsRealmAuthenticationFlowsPost)
type AdminRealmsRealmAuthenticationFlowsPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Get form action providers Returns a stream of form action providers.
// (operationId: AdminRealmsRealmAuthenticationFormActionProvidersGet)
type AdminRealmsRealmAuthenticationFormActionProvidersGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Get form providers Returns a stream of form providers.
// (operationId: AdminRealmsRealmAuthenticationFormProvidersGet)
type AdminRealmsRealmAuthenticationFormProvidersGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Get configuration descriptions for all clients
// (operationId: AdminRealmsRealmAuthenticationPerClientConfigDescriptionGet)
type AdminRealmsRealmAuthenticationPerClientConfigDescriptionGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Register a new required actions
// (operationId: AdminRealmsRealmAuthenticationRegisterRequiredActionPost)
type AdminRealmsRealmAuthenticationRegisterRequiredActionPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Delete RequiredAction configuration
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDelete)
type AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDeleteParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Get RequiredAction provider configuration description
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDescriptionGet)
type AdminRealmsRealmAuthenticationRequiredActionsAliasConfigDescriptionGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Get RequiredAction configuration
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasConfigGet)
type AdminRealmsRealmAuthenticationRequiredActionsAliasConfigGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Update RequiredAction configuration
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasConfigPut)
type AdminRealmsRealmAuthenticationRequiredActionsAliasConfigPutParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Delete required action
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasDelete)
type AdminRealmsRealmAuthenticationRequiredActionsAliasDeleteParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Get required action for alias
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasGet)
type AdminRealmsRealmAuthenticationRequiredActionsAliasGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Lower required action's priority
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasLowerPriorityPost)
type AdminRealmsRealmAuthenticationRequiredActionsAliasLowerPriorityPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Update required action
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasPut)
type AdminRealmsRealmAuthenticationRequiredActionsAliasPutParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Raise required action's priority
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsAliasRaisePriorityPost)
type AdminRealmsRealmAuthenticationRequiredActionsAliasRaisePriorityPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// Alias of required action
	Alias string `uri:"alias"`
}

// Get required actions Returns a stream of required actions.
// (operationId: AdminRealmsRealmAuthenticationRequiredActionsGet)
type AdminRealmsRealmAuthenticationRequiredActionsGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}

// Get unregistered required actions Returns a stream of unregistered required actions.
// (operationId: AdminRealmsRealmAuthenticationUnregisteredRequiredActionsGet)
type AdminRealmsRealmAuthenticationUnregisteredRequiredActionsGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
}
