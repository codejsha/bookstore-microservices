// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak Admin REST API
//
// This is a REST API reference for the Keycloak Admin REST API.
//
// API version: 1.0

package idp

// Create multiple mappers
// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersAddModelsPost)
type AdminRealmsRealmClientScopesClientScopeIdProtocolMappersAddModelsPostParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
}

// Get mappers
// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsGet)
type AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsGetParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
}

// Delete the mapper
// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdDelete)
type AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdDeleteParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
	// Mapper id
	Id string `uri:"id"`
}

// Get mapper by id
// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdGet)
type AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdGetParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
	// Mapper id
	Id string `uri:"id"`
}

// Update the mapper
// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdPut)
type AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdPutParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
	// Mapper id
	Id string `uri:"id"`
}

// Create a mapper
// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsPost)
type AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsPostParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
}

// Get mappers by name for a specific protocol
// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersProtocolProtocolGet)
type AdminRealmsRealmClientScopesClientScopeIdProtocolMappersProtocolProtocolGetParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
	Protocol      string `uri:"protocol"`
}

// Create multiple mappers
// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersAddModelsPost)
type AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersAddModelsPostParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
}

// Get mappers
// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsGet)
type AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsGetParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
}

// Delete the mapper
// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdDelete)
type AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdDeleteParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
	// Mapper id
	Id string `uri:"id"`
}

// Get mapper by id
// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdGet)
type AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdGetParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
	// Mapper id
	Id string `uri:"id"`
}

// Update the mapper
// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdPut)
type AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdPutParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
	// Mapper id
	Id string `uri:"id"`
}

// Create a mapper
// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsPost)
type AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsPostParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
}

// Get mappers by name for a specific protocol
// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersProtocolProtocolGet)
type AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersProtocolProtocolGetParam struct {
	// realm name (not id!)
	Realm         string `uri:"realm"`
	ClientScopeId string `uri:"client-scope-id"`
	Protocol      string `uri:"protocol"`
}

// Create multiple mappers
// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersAddModelsPost)
type AdminRealmsRealmClientsClientUuidProtocolMappersAddModelsPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// id of client (not client-id!)
	ClientUuid string `uri:"client-uuid"`
}

// Get mappers
// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsGet)
type AdminRealmsRealmClientsClientUuidProtocolMappersModelsGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// id of client (not client-id!)
	ClientUuid string `uri:"client-uuid"`
}

// Delete the mapper
// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdDelete)
type AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdDeleteParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// id of client (not client-id!)
	ClientUuid string `uri:"client-uuid"`
	// Mapper id
	Id string `uri:"id"`
}

// Get mapper by id
// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdGet)
type AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// id of client (not client-id!)
	ClientUuid string `uri:"client-uuid"`
	// Mapper id
	Id string `uri:"id"`
}

// Update the mapper
// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdPut)
type AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdPutParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// id of client (not client-id!)
	ClientUuid string `uri:"client-uuid"`
	// Mapper id
	Id string `uri:"id"`
}

// Create a mapper
// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsPost)
type AdminRealmsRealmClientsClientUuidProtocolMappersModelsPostParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// id of client (not client-id!)
	ClientUuid string `uri:"client-uuid"`
}

// Get mappers by name for a specific protocol
// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersProtocolProtocolGet)
type AdminRealmsRealmClientsClientUuidProtocolMappersProtocolProtocolGetParam struct {
	// realm name (not id!)
	Realm string `uri:"realm"`
	// id of client (not client-id!)
	ClientUuid string `uri:"client-uuid"`
	Protocol   string `uri:"protocol"`
}
