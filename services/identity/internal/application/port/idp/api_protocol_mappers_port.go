// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak Admin REST API
//
// This is a REST API reference for the Keycloak Admin REST API.
//
// API version: 1.0

package idp

import (
	"context"
)

type ProtocolMappersAPI interface {

	// Create multiple mappers
	// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersAddModelsPost)
	// POST /admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/add-models
	AdminRealmsRealmClientScopesClientScopeIdProtocolMappersAddModelsPost(ctx context.Context, param AdminRealmsRealmClientScopesClientScopeIdProtocolMappersAddModelsPostParam, req AdminRealmsRealmClientScopesClientScopeIdProtocolMappersAddModelsPostReq) error

	// Get mappers
	// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsGet)
	// GET /admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/models
	AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsGet(ctx context.Context, param AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsGetParam) ([]ProtocolMapperRepresentation, error)

	// Delete the mapper
	// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdDelete)
	// DELETE /admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/models/{id}
	AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdDelete(ctx context.Context, param AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdDeleteParam) error

	// Get mapper by id
	// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdGet)
	// GET /admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/models/{id}
	AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdGet(ctx context.Context, param AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdGetParam) (ProtocolMapperRepresentation, error)

	// Update the mapper
	// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdPut)
	// PUT /admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/models/{id}
	AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdPut(ctx context.Context, param AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdPutParam, req ProtocolMapperRepresentation) error

	// Create a mapper
	// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsPost)
	// POST /admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/models
	AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsPost(ctx context.Context, param AdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsPostParam, req ProtocolMapperRepresentation) error

	// Get mappers by name for a specific protocol
	// (operationId: AdminRealmsRealmClientScopesClientScopeIdProtocolMappersProtocolProtocolGet)
	// GET /admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/protocol/{protocol}
	AdminRealmsRealmClientScopesClientScopeIdProtocolMappersProtocolProtocolGet(ctx context.Context, param AdminRealmsRealmClientScopesClientScopeIdProtocolMappersProtocolProtocolGetParam) ([]ProtocolMapperRepresentation, error)

	// Create multiple mappers
	// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersAddModelsPost)
	// POST /admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/add-models
	AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersAddModelsPost(ctx context.Context, param AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersAddModelsPostParam, req AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersAddModelsPostReq) error

	// Get mappers
	// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsGet)
	// GET /admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/models
	AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsGet(ctx context.Context, param AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsGetParam) ([]ProtocolMapperRepresentation, error)

	// Delete the mapper
	// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdDelete)
	// DELETE /admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/models/{id}
	AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdDelete(ctx context.Context, param AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdDeleteParam) error

	// Get mapper by id
	// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdGet)
	// GET /admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/models/{id}
	AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdGet(ctx context.Context, param AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdGetParam) (ProtocolMapperRepresentation, error)

	// Update the mapper
	// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdPut)
	// PUT /admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/models/{id}
	AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdPut(ctx context.Context, param AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdPutParam, req ProtocolMapperRepresentation) error

	// Create a mapper
	// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsPost)
	// POST /admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/models
	AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsPost(ctx context.Context, param AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsPostParam, req ProtocolMapperRepresentation) error

	// Get mappers by name for a specific protocol
	// (operationId: AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersProtocolProtocolGet)
	// GET /admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/protocol/{protocol}
	AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersProtocolProtocolGet(ctx context.Context, param AdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersProtocolProtocolGetParam) ([]ProtocolMapperRepresentation, error)

	// Create multiple mappers
	// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersAddModelsPost)
	// POST /admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/add-models
	AdminRealmsRealmClientsClientUuidProtocolMappersAddModelsPost(ctx context.Context, param AdminRealmsRealmClientsClientUuidProtocolMappersAddModelsPostParam, req AdminRealmsRealmClientsClientUuidProtocolMappersAddModelsPostReq) error

	// Get mappers
	// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsGet)
	// GET /admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/models
	AdminRealmsRealmClientsClientUuidProtocolMappersModelsGet(ctx context.Context, param AdminRealmsRealmClientsClientUuidProtocolMappersModelsGetParam) ([]ProtocolMapperRepresentation, error)

	// Delete the mapper
	// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdDelete)
	// DELETE /admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/models/{id}
	AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdDelete(ctx context.Context, param AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdDeleteParam) error

	// Get mapper by id
	// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdGet)
	// GET /admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/models/{id}
	AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdGet(ctx context.Context, param AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdGetParam) (ProtocolMapperRepresentation, error)

	// Update the mapper
	// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdPut)
	// PUT /admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/models/{id}
	AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdPut(ctx context.Context, param AdminRealmsRealmClientsClientUuidProtocolMappersModelsIdPutParam, req ProtocolMapperRepresentation) error

	// Create a mapper
	// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersModelsPost)
	// POST /admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/models
	AdminRealmsRealmClientsClientUuidProtocolMappersModelsPost(ctx context.Context, param AdminRealmsRealmClientsClientUuidProtocolMappersModelsPostParam, req ProtocolMapperRepresentation) error

	// Get mappers by name for a specific protocol
	// (operationId: AdminRealmsRealmClientsClientUuidProtocolMappersProtocolProtocolGet)
	// GET /admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/protocol/{protocol}
	AdminRealmsRealmClientsClientUuidProtocolMappersProtocolProtocolGet(ctx context.Context, param AdminRealmsRealmClientsClientUuidProtocolMappersProtocolProtocolGetParam) ([]ProtocolMapperRepresentation, error)
}
