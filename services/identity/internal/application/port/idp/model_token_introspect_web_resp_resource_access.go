// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak OpenID Connect API
//
// Keycloak OpenID Connect API of Bookstore microservices
//
// API version: 0.1.0
// Contact: admin@example.com

package idp

import (
	"encoding/json"
)

// checks if the TokenIntrospectWebRespResourceAccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenIntrospectWebRespResourceAccess{}

// TokenIntrospectWebRespResourceAccess struct for TokenIntrospectWebRespResourceAccess
type TokenIntrospectWebRespResourceAccess struct {
	RealmManagement *TokenIntrospectWebRespRealmAccess `json:"realm-management,omitempty"`
	Account         *TokenIntrospectWebRespRealmAccess `json:"account,omitempty"`
}

// NewTokenIntrospectWebRespResourceAccess instantiates a new TokenIntrospectWebRespResourceAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenIntrospectWebRespResourceAccess() *TokenIntrospectWebRespResourceAccess {
	this := TokenIntrospectWebRespResourceAccess{}
	return &this
}

// NewTokenIntrospectWebRespResourceAccessWithDefaults instantiates a new TokenIntrospectWebRespResourceAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenIntrospectWebRespResourceAccessWithDefaults() *TokenIntrospectWebRespResourceAccess {
	this := TokenIntrospectWebRespResourceAccess{}
	return &this
}

// GetRealmManagement returns the RealmManagement field value if set, zero value otherwise.
func (o *TokenIntrospectWebRespResourceAccess) GetRealmManagement() TokenIntrospectWebRespRealmAccess {
	if o == nil || IsNil(o.RealmManagement) {
		var ret TokenIntrospectWebRespRealmAccess
		return ret
	}
	return *o.RealmManagement
}

// GetRealmManagementOk returns a tuple with the RealmManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebRespResourceAccess) GetRealmManagementOk() (*TokenIntrospectWebRespRealmAccess, bool) {
	if o == nil || IsNil(o.RealmManagement) {
		return nil, false
	}
	return o.RealmManagement, true
}

// HasRealmManagement returns a boolean if a field has been set.
func (o *TokenIntrospectWebRespResourceAccess) HasRealmManagement() bool {
	if o != nil && !IsNil(o.RealmManagement) {
		return true
	}

	return false
}

// SetRealmManagement gets a reference to the given TokenIntrospectWebRespRealmAccess and assigns it to the RealmManagement field.
func (o *TokenIntrospectWebRespResourceAccess) SetRealmManagement(v TokenIntrospectWebRespRealmAccess) {
	o.RealmManagement = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *TokenIntrospectWebRespResourceAccess) GetAccount() TokenIntrospectWebRespRealmAccess {
	if o == nil || IsNil(o.Account) {
		var ret TokenIntrospectWebRespRealmAccess
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenIntrospectWebRespResourceAccess) GetAccountOk() (*TokenIntrospectWebRespRealmAccess, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *TokenIntrospectWebRespResourceAccess) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given TokenIntrospectWebRespRealmAccess and assigns it to the Account field.
func (o *TokenIntrospectWebRespResourceAccess) SetAccount(v TokenIntrospectWebRespRealmAccess) {
	o.Account = &v
}

func (o TokenIntrospectWebRespResourceAccess) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenIntrospectWebRespResourceAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RealmManagement) {
		toSerialize["realm-management"] = o.RealmManagement
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	return toSerialize, nil
}

type NullableTokenIntrospectWebRespResourceAccess struct {
	value *TokenIntrospectWebRespResourceAccess
	isSet bool
}

func (v NullableTokenIntrospectWebRespResourceAccess) Get() *TokenIntrospectWebRespResourceAccess {
	return v.value
}

func (v *NullableTokenIntrospectWebRespResourceAccess) Set(val *TokenIntrospectWebRespResourceAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenIntrospectWebRespResourceAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenIntrospectWebRespResourceAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenIntrospectWebRespResourceAccess(val *TokenIntrospectWebRespResourceAccess) *NullableTokenIntrospectWebRespResourceAccess {
	return &NullableTokenIntrospectWebRespResourceAccess{value: val, isSet: true}
}

func (v NullableTokenIntrospectWebRespResourceAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenIntrospectWebRespResourceAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
