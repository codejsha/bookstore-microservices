// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak OpenID Connect API
//
// Keycloak OpenID Connect API of Bookstore microservices
//
// API version: 0.1.0
// Contact: admin@example.com

package idp

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TokenExchangeWebResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenExchangeWebResp{}

// TokenExchangeWebResp struct for TokenExchangeWebResp
type TokenExchangeWebResp struct {
	AccessToken      string `json:"access_token"`
	ExpiresIn        int32  `json:"expires_in"`
	RefreshExpiresIn int32  `json:"refresh_expires_in"`
	RefreshToken     string `json:"refresh_token"`
	TokenType        string `json:"token_type"`
	// openid scope
	IdToken         *string `json:"id_token,omitempty"`
	NotBeforePolicy int32   `json:"not-before-policy"`
	SessionState    string  `json:"session_state"`
	Scope           string  `json:"scope"`
}

type _TokenExchangeWebResp TokenExchangeWebResp

// NewTokenExchangeWebResp instantiates a new TokenExchangeWebResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenExchangeWebResp(accessToken string, expiresIn int32, refreshExpiresIn int32, refreshToken string, tokenType string, notBeforePolicy int32, sessionState string, scope string) *TokenExchangeWebResp {
	this := TokenExchangeWebResp{}
	this.AccessToken = accessToken
	this.ExpiresIn = expiresIn
	this.RefreshExpiresIn = refreshExpiresIn
	this.RefreshToken = refreshToken
	this.TokenType = tokenType
	this.NotBeforePolicy = notBeforePolicy
	this.SessionState = sessionState
	this.Scope = scope
	return &this
}

// NewTokenExchangeWebRespWithDefaults instantiates a new TokenExchangeWebResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenExchangeWebRespWithDefaults() *TokenExchangeWebResp {
	this := TokenExchangeWebResp{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *TokenExchangeWebResp) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *TokenExchangeWebResp) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *TokenExchangeWebResp) GetExpiresIn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetExpiresInOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *TokenExchangeWebResp) SetExpiresIn(v int32) {
	o.ExpiresIn = v
}

// GetRefreshExpiresIn returns the RefreshExpiresIn field value
func (o *TokenExchangeWebResp) GetRefreshExpiresIn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RefreshExpiresIn
}

// GetRefreshExpiresInOk returns a tuple with the RefreshExpiresIn field value
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetRefreshExpiresInOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshExpiresIn, true
}

// SetRefreshExpiresIn sets field value
func (o *TokenExchangeWebResp) SetRefreshExpiresIn(v int32) {
	o.RefreshExpiresIn = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *TokenExchangeWebResp) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *TokenExchangeWebResp) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetTokenType returns the TokenType field value
func (o *TokenExchangeWebResp) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *TokenExchangeWebResp) SetTokenType(v string) {
	o.TokenType = v
}

// GetIdToken returns the IdToken field value if set, zero value otherwise.
func (o *TokenExchangeWebResp) GetIdToken() string {
	if o == nil || IsNil(o.IdToken) {
		var ret string
		return ret
	}
	return *o.IdToken
}

// GetIdTokenOk returns a tuple with the IdToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetIdTokenOk() (*string, bool) {
	if o == nil || IsNil(o.IdToken) {
		return nil, false
	}
	return o.IdToken, true
}

// HasIdToken returns a boolean if a field has been set.
func (o *TokenExchangeWebResp) HasIdToken() bool {
	if o != nil && !IsNil(o.IdToken) {
		return true
	}

	return false
}

// SetIdToken gets a reference to the given string and assigns it to the IdToken field.
func (o *TokenExchangeWebResp) SetIdToken(v string) {
	o.IdToken = &v
}

// GetNotBeforePolicy returns the NotBeforePolicy field value
func (o *TokenExchangeWebResp) GetNotBeforePolicy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NotBeforePolicy
}

// GetNotBeforePolicyOk returns a tuple with the NotBeforePolicy field value
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetNotBeforePolicyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotBeforePolicy, true
}

// SetNotBeforePolicy sets field value
func (o *TokenExchangeWebResp) SetNotBeforePolicy(v int32) {
	o.NotBeforePolicy = v
}

// GetSessionState returns the SessionState field value
func (o *TokenExchangeWebResp) GetSessionState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionState
}

// GetSessionStateOk returns a tuple with the SessionState field value
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetSessionStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionState, true
}

// SetSessionState sets field value
func (o *TokenExchangeWebResp) SetSessionState(v string) {
	o.SessionState = v
}

// GetScope returns the Scope field value
func (o *TokenExchangeWebResp) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *TokenExchangeWebResp) GetScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *TokenExchangeWebResp) SetScope(v string) {
	o.Scope = v
}

func (o TokenExchangeWebResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenExchangeWebResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	toSerialize["expires_in"] = o.ExpiresIn
	toSerialize["refresh_expires_in"] = o.RefreshExpiresIn
	toSerialize["refresh_token"] = o.RefreshToken
	toSerialize["token_type"] = o.TokenType
	if !IsNil(o.IdToken) {
		toSerialize["id_token"] = o.IdToken
	}
	toSerialize["not-before-policy"] = o.NotBeforePolicy
	toSerialize["session_state"] = o.SessionState
	toSerialize["scope"] = o.Scope
	return toSerialize, nil
}

func (o *TokenExchangeWebResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_token",
		"expires_in",
		"refresh_expires_in",
		"refresh_token",
		"token_type",
		"not-before-policy",
		"session_state",
		"scope",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenExchangeWebResp := _TokenExchangeWebResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenExchangeWebResp)

	if err != nil {
		return err
	}

	*o = TokenExchangeWebResp(varTokenExchangeWebResp)

	return err
}

type NullableTokenExchangeWebResp struct {
	value *TokenExchangeWebResp
	isSet bool
}

func (v NullableTokenExchangeWebResp) Get() *TokenExchangeWebResp {
	return v.value
}

func (v *NullableTokenExchangeWebResp) Set(val *TokenExchangeWebResp) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenExchangeWebResp) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenExchangeWebResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenExchangeWebResp(val *TokenExchangeWebResp) *NullableTokenExchangeWebResp {
	return &NullableTokenExchangeWebResp{value: val, isSet: true}
}

func (v NullableTokenExchangeWebResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenExchangeWebResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
