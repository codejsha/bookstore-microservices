// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Keycloak Admin REST API
//
// This is a REST API reference for the Keycloak Admin REST API.
//
// API version: 1.0

package idp

import (
	"context"

	"os"
)

type ClientAttributeCertificateAPI interface {

	// Get a keystore file for the client, containing private key and public certificate
	// (operationId: AdminRealmsRealmClientsClientUuidCertificatesAttrDownloadPost)
	// POST /admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/download
	AdminRealmsRealmClientsClientUuidCertificatesAttrDownloadPost(ctx context.Context, param AdminRealmsRealmClientsClientUuidCertificatesAttrDownloadPostParam, req KeyStoreConfig) (*os.File, error)

	// Generate a new keypair and certificate, and get the private key file  Generates a keypair and certificate and serves the private key in a specified keystore format. Only generated public certificate is saved in Keycloak DB - the private key is not.
	// (operationId: AdminRealmsRealmClientsClientUuidCertificatesAttrGenerateAndDownloadPost)
	// POST /admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/generate-and-download
	AdminRealmsRealmClientsClientUuidCertificatesAttrGenerateAndDownloadPost(ctx context.Context, param AdminRealmsRealmClientsClientUuidCertificatesAttrGenerateAndDownloadPostParam, req KeyStoreConfig) (*os.File, error)

	// Generate a new certificate with new key pair
	// (operationId: AdminRealmsRealmClientsClientUuidCertificatesAttrGeneratePost)
	// POST /admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/generate
	AdminRealmsRealmClientsClientUuidCertificatesAttrGeneratePost(ctx context.Context, param AdminRealmsRealmClientsClientUuidCertificatesAttrGeneratePostParam) (CertificateRepresentation, error)

	// Get key info
	// (operationId: AdminRealmsRealmClientsClientUuidCertificatesAttrGet)
	// GET /admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}
	AdminRealmsRealmClientsClientUuidCertificatesAttrGet(ctx context.Context, param AdminRealmsRealmClientsClientUuidCertificatesAttrGetParam) (CertificateRepresentation, error)

	// Upload only certificate, not private key
	// (operationId: AdminRealmsRealmClientsClientUuidCertificatesAttrUploadCertificatePost)
	// POST /admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/upload-certificate
	AdminRealmsRealmClientsClientUuidCertificatesAttrUploadCertificatePost(ctx context.Context, param AdminRealmsRealmClientsClientUuidCertificatesAttrUploadCertificatePostParam) (CertificateRepresentation, error)

	// Upload certificate and eventually private key
	// (operationId: AdminRealmsRealmClientsClientUuidCertificatesAttrUploadPost)
	// POST /admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/upload
	AdminRealmsRealmClientsClientUuidCertificatesAttrUploadPost(ctx context.Context, param AdminRealmsRealmClientsClientUuidCertificatesAttrUploadPostParam) (CertificateRepresentation, error)
}
